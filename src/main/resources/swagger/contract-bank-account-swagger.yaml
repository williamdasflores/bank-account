info:
  title: Bank Account
  version: 1.0.0
consumes:
  - application/json
produces:
  - application/json
swagger: '2.0'
securityDefinitions:
  keystone:
    description: OpenStack Keystone Authentication
    type: apiKey
    in: header
    name: x-auth-token

security: []

paths:
  /v1/customer:
    post:
      summary: Create Customer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/customer"
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/checkingAccount'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not Found
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'

  /v1/transfer:
    post:
      summary: Transferring Between Accounts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/transfer"
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/transaction'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not Found
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'

  /v1/deposit:
    post:
      summary: Deposit
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/deposit"
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/transaction'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not Found
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'

definitions:
  customer:
    type: object
    properties:
      documentNumber:
        type: string
        minLength: 11
        maxLength: 14
        pattern:  "[0-9]+"
        x-pattern-message: "should be numbers"
        example: 93422283211
      name:
        type: "string"
        example: "John"
        minLength: 3
      lastName:
        type: "string"
        minLength: 3
        example: "Doe"
      phoneNumber:
        type: "string"
        pattern: "[0-9]+"
        example: "1198732212"
        x-pattern-message: should be numbers
      email:
        type: "string"
        example: "john.doe@gmail.com"
        pattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
      address:
        $ref: '#/definitions/address'
    required: [documentNumber, name, lastName, address]

  address:
    type: object
    properties:
      city:
        type: "string"
        example: "Sao Paulo"
      state:
        type: "string"
        enum: ["SP", "RJ", "MG", "ES"]
      postalCode:
        type: "string"
        example: "03374-110"
      info:
        type: "string"
        example: "Rua Coelho Lisboa, 223"
    required: [postalCode]

  checkingAccount:
    type: object
    properties:
      accountNumber:
        type: "integer"
        example: 63442
        minimum: 1
      balanceAccount:
        type: "number"
        format: "string"
        example: "0.0"
        pattern: '(?=.*\d)^\$?(([1-9]\d{0,2}(,\d{3})*)|0)?(\,\d{1,2})?$'
    required: [accountNumber, balanceAccount]

  transfer:
    type: object
    properties:
      sender:
        $ref: '#/definitions/sender'
      amount:
        type: "number"
        format: "string"
        example: "2000.00"
        pattern: '(?=.*\d)^\$?(([1-9]\d{0,2}(,\d{3})*)|0)?(\,\d{1,2})?$'
      payee:
        $ref: '#/definitions/payee'
    required: [sender, amount, payee]

  deposit:
    type: object
    properties:
      payee:
        $ref: '#/definitions/payee'
      amount:
        type: "number"
        format: "string"
        example: "2000.00"
        pattern: '(?=.*\d)^\$?(([1-9]\d{0,2}(,\d{3})*)|0)?(\,\d{1,2})?$'
    required: [payee, amount]

  sender:
    type: object
    properties:
      name:
        type: "string"
        example: "John"
      documentNumber:
        type: "integer"
        format: "int64"
        example: 83757812390
        minimum: 11
        maximum: 11
      accountNumber:
        type: "integer"
        example: 146754
        minimum: 1
    required: [name, documentNumber, accountNumber]

  payee:
    type: object
    properties:
      name:
        type: "string"
        example: "John"
      documentNumber:
        type: "integer"
        format: "int64"
        example: 83757812390
        minimum: 11
        maximum: 11
      accountNumber:
        type: "integer"
        example: 146754
        minimum: 1
    required: [name, documentNumber, accountNumber]

  transaction:
    type: object
    properties:
      uuid:
        type: "string"
        example: "7d52ff18-8a54-49f8-b996-f93c9e69e326"
      amount:
        type: "number"
        format: "string"
        example: "2000.00"
      dateTransaction:
        type: "string"
        example: "2021-02-28"

  error:
    type: array
    items:
      type: object
      properties:
        error:
          type: "string"
          example: "BAD_REQUEST"
        message:
          type: "string"
          example: "documentNumber must not be emptu"